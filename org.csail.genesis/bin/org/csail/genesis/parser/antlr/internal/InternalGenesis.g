/*
* generated by Xtext
*/
grammar InternalGenesis;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.csail.genesis.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.csail.genesis.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.csail.genesis.services.GenesisGrammarAccess;

}

@parser::members {

 	private GenesisGrammarAccess grammarAccess;
 	
    public InternalGenesisParser(TokenStream input, GenesisGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Model";	
   	}
   	
   	@Override
   	protected GenesisGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModel
entryRuleModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModelRule()); }
	 iv_ruleModel=ruleModel 
	 { $current=$iv_ruleModel.current; } 
	 EOF 
;

// Rule Model
ruleModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getHeaderSentenceParserRuleCall_0_0()); 
	    }
		lv_header_0_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"header",
        		lv_header_0_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getModelAccess().getSectionsSectionParserRuleCall_1_0()); 
	    }
		lv_sections_1_0=ruleSection		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModelRule());
	        }
       		add(
       			$current, 
       			"sections",
        		lv_sections_1_0, 
        		"Section");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSection
entryRuleSection returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSectionRule()); }
	 iv_ruleSection=ruleSection 
	 { $current=$iv_ruleSection.current; } 
	 EOF 
;

// Rule Section
ruleSection returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getSectionAccess().getCommonsenseKnowledgeParserRuleCall_0()); 
    }
    this_CommonsenseKnowledge_0=ruleCommonsenseKnowledge
    { 
        $current = $this_CommonsenseKnowledge_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionAccess().getReflexiveKnowledgeParserRuleCall_1()); 
    }
    this_ReflexiveKnowledge_1=ruleReflexiveKnowledge
    { 
        $current = $this_ReflexiveKnowledge_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getSectionAccess().getPerspectiveParserRuleCall_2()); 
    }
    this_Perspective_2=rulePerspective
    { 
        $current = $this_Perspective_2.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleCommonsenseKnowledge
entryRuleCommonsenseKnowledge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommonsenseKnowledgeRule()); }
	 iv_ruleCommonsenseKnowledge=ruleCommonsenseKnowledge 
	 { $current=$iv_ruleCommonsenseKnowledge.current; } 
	 EOF 
;

// Rule CommonsenseKnowledge
ruleCommonsenseKnowledge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getCommonsenseKnowledgeAccess().getCommonsenseKnowledgeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCommonsenseKnowledgeAccess().getNameCommonsenseKnowledgeHeaderParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleCommonsenseKnowledgeHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommonsenseKnowledgeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"CommonsenseKnowledgeHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getCommonsenseKnowledgeAccess().getBodyDescriptionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getCommonsenseKnowledgeRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleCommonsenseKnowledgeHeader
entryRuleCommonsenseKnowledgeHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getCommonsenseKnowledgeHeaderRule()); } 
	 iv_ruleCommonsenseKnowledgeHeader=ruleCommonsenseKnowledgeHeader 
	 { $current=$iv_ruleCommonsenseKnowledgeHeader.current.getText(); }  
	 EOF 
;

// Rule CommonsenseKnowledgeHeader
ruleCommonsenseKnowledgeHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Start' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCommonsenseKnowledgeHeaderAccess().getStartKeyword_0()); 
    }

	kw='commonsense' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCommonsenseKnowledgeHeaderAccess().getCommonsenseKeyword_1()); 
    }

	kw='knowledge' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCommonsenseKnowledgeHeaderAccess().getKnowledgeKeyword_2()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getCommonsenseKnowledgeHeaderAccess().getFullStopKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleReflexiveKnowledge
entryRuleReflexiveKnowledge returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReflexiveKnowledgeRule()); }
	 iv_ruleReflexiveKnowledge=ruleReflexiveKnowledge 
	 { $current=$iv_ruleReflexiveKnowledge.current; } 
	 EOF 
;

// Rule ReflexiveKnowledge
ruleReflexiveKnowledge returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReflexiveKnowledgeAccess().getReflexiveKnowledgeAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReflexiveKnowledgeAccess().getNameReflexiveKnowledgeHeaderParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleReflexiveKnowledgeHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReflexiveKnowledgeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ReflexiveKnowledgeHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReflexiveKnowledgeAccess().getSubsectionsReflexiveDescriptionParserRuleCall_2_0()); 
	    }
		lv_subsections_2_0=ruleReflexiveDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReflexiveKnowledgeRule());
	        }
       		add(
       			$current, 
       			"subsections",
        		lv_subsections_2_0, 
        		"ReflexiveDescription");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleReflexiveKnowledgeHeader
entryRuleReflexiveKnowledgeHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getReflexiveKnowledgeHeaderRule()); } 
	 iv_ruleReflexiveKnowledgeHeader=ruleReflexiveKnowledgeHeader 
	 { $current=$iv_ruleReflexiveKnowledgeHeader.current.getText(); }  
	 EOF 
;

// Rule ReflexiveKnowledgeHeader
ruleReflexiveKnowledgeHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Start' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveKnowledgeHeaderAccess().getStartKeyword_0()); 
    }

	kw='reflexive' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveKnowledgeHeaderAccess().getReflexiveKeyword_1()); 
    }

	kw='knowledge' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveKnowledgeHeaderAccess().getKnowledgeKeyword_2()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveKnowledgeHeaderAccess().getFullStopKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleReflexiveDescription
entryRuleReflexiveDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getReflexiveDescriptionRule()); }
	 iv_ruleReflexiveDescription=ruleReflexiveDescription 
	 { $current=$iv_ruleReflexiveDescription.current; } 
	 EOF 
;

// Rule ReflexiveDescription
ruleReflexiveDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getReflexiveDescriptionAccess().getReflexiveDescriptionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReflexiveDescriptionAccess().getNameReflexiveDescriptionHeaderParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleReflexiveDescriptionHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReflexiveDescriptionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"ReflexiveDescriptionHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getReflexiveDescriptionAccess().getBodyDescriptionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReflexiveDescriptionRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getReflexiveDescriptionAccess().getTheEndFooterParserRuleCall_3()); 
    }
ruleTheEndFooter
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleTheEndFooter
entryRuleTheEndFooter returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTheEndFooterRule()); } 
	 iv_ruleTheEndFooter=ruleTheEndFooter 
	 { $current=$iv_ruleTheEndFooter.current.getText(); }  
	 EOF 
;

// Rule TheEndFooter
ruleTheEndFooter returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='The' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTheEndFooterAccess().getTheKeyword_0()); 
    }

	kw='end' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTheEndFooterAccess().getEndKeyword_1()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getTheEndFooterAccess().getFullStopKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleReflexiveDescriptionHeader
entryRuleReflexiveDescriptionHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getReflexiveDescriptionHeaderRule()); } 
	 iv_ruleReflexiveDescriptionHeader=ruleReflexiveDescriptionHeader 
	 { $current=$iv_ruleReflexiveDescriptionHeader.current.getText(); }  
	 EOF 
;

// Rule ReflexiveDescriptionHeader
ruleReflexiveDescriptionHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Start' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveDescriptionHeaderAccess().getStartKeyword_0()); 
    }

	kw='description' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveDescriptionHeaderAccess().getDescriptionKeyword_1()); 
    }

	kw='of' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveDescriptionHeaderAccess().getOfKeyword_2()); 
    }
    this_QUOTED_TEXT_3=RULE_QUOTED_TEXT    {
		$current.merge(this_QUOTED_TEXT_3);
    }

    { 
    newLeafNode(this_QUOTED_TEXT_3, grammarAccess.getReflexiveDescriptionHeaderAccess().getQUOTED_TEXTTerminalRuleCall_3()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getReflexiveDescriptionHeaderAccess().getFullStopKeyword_4()); 
    }
)
    ;





// Entry rule entryRulePerspective
entryRulePerspective returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getPerspectiveRule()); }
	 iv_rulePerspective=rulePerspective 
	 { $current=$iv_rulePerspective.current; } 
	 EOF 
;

// Rule Perspective
rulePerspective returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getPerspectiveAccess().getPerspectiveAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPerspectiveAccess().getNamePerspectiveHeaderParserRuleCall_1_0()); 
	    }
		lv_name_1_0=rulePerspectiveHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPerspectiveRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"PerspectiveHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPerspectiveAccess().getSubsectionsStoryParserRuleCall_2_0()); 
	    }
		lv_subsections_2_0=ruleStory		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPerspectiveRule());
	        }
       		add(
       			$current, 
       			"subsections",
        		lv_subsections_2_0, 
        		"Story");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRulePerspectiveHeader
entryRulePerspectiveHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getPerspectiveHeaderRule()); } 
	 iv_rulePerspectiveHeader=rulePerspectiveHeader 
	 { $current=$iv_rulePerspectiveHeader.current.getText(); }  
	 EOF 
;

// Rule PerspectiveHeader
rulePerspectiveHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_WORD_0=RULE_WORD    {
		$current.merge(this_WORD_0);
    }

    { 
    newLeafNode(this_WORD_0, grammarAccess.getPerspectiveHeaderAccess().getWORDTerminalRuleCall_0()); 
    }

	kw='perspective' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPerspectiveHeaderAccess().getPerspectiveKeyword_1()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPerspectiveHeaderAccess().getFullStopKeyword_2()); 
    }
)
    ;





// Entry rule entryRuleStory
entryRuleStory returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStoryRule()); }
	 iv_ruleStory=ruleStory 
	 { $current=$iv_ruleStory.current; } 
	 EOF 
;

// Rule Story
ruleStory returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStoryAccess().getStoryAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStoryAccess().getNameStoryHeaderParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleStoryHeader		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoryRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"StoryHeader");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getStoryAccess().getBodyDescriptionParserRuleCall_2_0()); 
	    }
		lv_body_2_0=ruleDescription		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStoryRule());
	        }
       		set(
       			$current, 
       			"body",
        		lv_body_2_0, 
        		"Description");
	        afterParserOrEnumRuleCall();
	    }

)
)
    { 
        newCompositeNode(grammarAccess.getStoryAccess().getTheEndFooterParserRuleCall_3()); 
    }
ruleTheEndFooter
    { 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleStoryHeader
entryRuleStoryHeader returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getStoryHeaderRule()); } 
	 iv_ruleStoryHeader=ruleStoryHeader 
	 { $current=$iv_ruleStoryHeader.current.getText(); }  
	 EOF 
;

// Rule StoryHeader
ruleStoryHeader returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='Start' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStoryHeaderAccess().getStartKeyword_0()); 
    }

	kw='story' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStoryHeaderAccess().getStoryKeyword_1()); 
    }

	kw='titled' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStoryHeaderAccess().getTitledKeyword_2()); 
    }
    this_QUOTED_TEXT_3=RULE_QUOTED_TEXT    {
		$current.merge(this_QUOTED_TEXT_3);
    }

    { 
    newLeafNode(this_QUOTED_TEXT_3, grammarAccess.getStoryHeaderAccess().getQUOTED_TEXTTerminalRuleCall_3()); 
    }

	kw='.' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getStoryHeaderAccess().getFullStopKeyword_4()); 
    }
)
    ;





// Entry rule entryRuleDescription
entryRuleDescription returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDescriptionRule()); }
	 iv_ruleDescription=ruleDescription 
	 { $current=$iv_ruleDescription.current; } 
	 EOF 
;

// Rule Description
ruleDescription returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDescriptionAccess().getDescriptionAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getDescriptionAccess().getSentencesSentenceParserRuleCall_1_0()); 
	    }
		lv_sentences_1_0=ruleSentence		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDescriptionRule());
	        }
       		add(
       			$current, 
       			"sentences",
        		lv_sentences_1_0, 
        		"Sentence");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;





// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	 iv_ruleSentence=ruleSentence 
	 { $current=$iv_ruleSentence.current; } 
	 EOF 
;

// Rule Sentence
ruleSentence returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getSentenceAccess().getSentenceAction_0(),
            $current);
    }
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getFragmentsREGULAR_FRAGMENTParserRuleCall_1_0_0_0()); 
	    }
		lv_fragments_1_0=ruleREGULAR_FRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"fragments",
        		lv_fragments_1_0, 
        		"REGULAR_FRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
(
		lv_fragments_2_0=	'Start' 
    {
        newLeafNode(lv_fragments_2_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_2_0, "Start");
	    }

)
)(
(
		lv_fragments_3_0=	'knowledge' 
    {
        newLeafNode(lv_fragments_3_0, grammarAccess.getSentenceAccess().getFragmentsKnowledgeKeyword_1_0_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_3_0, "knowledge");
	    }

)
))
    |((
(
		lv_fragments_4_0=	'Start' 
    {
        newLeafNode(lv_fragments_4_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_4_0, "Start");
	    }

)
)(
(
		lv_fragments_5_0=	'commonsense' 
    {
        newLeafNode(lv_fragments_5_0, grammarAccess.getSentenceAccess().getFragmentsCommonsenseKeyword_1_0_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_5_0, "commonsense");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getFragmentsREGULAR_FRAGMENTParserRuleCall_1_0_2_2_0()); 
	    }
		lv_fragments_6_0=ruleREGULAR_FRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"fragments",
        		lv_fragments_6_0, 
        		"REGULAR_FRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
(
		lv_fragments_7_0=	'Start' 
    {
        newLeafNode(lv_fragments_7_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_7_0, "Start");
	    }

)
)(
(
		lv_fragments_8_0=	'The' 
    {
        newLeafNode(lv_fragments_8_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_8_0, "The");
	    }

)
))
    |((
(
		lv_fragments_9_0=	'Start' 
    {
        newLeafNode(lv_fragments_9_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_9_0, "Start");
	    }

)
)(
(
		lv_fragments_10_0=	'end' 
    {
        newLeafNode(lv_fragments_10_0, grammarAccess.getSentenceAccess().getFragmentsEndKeyword_1_0_4_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_10_0, "end");
	    }

)
))
    |((
(
		lv_fragments_11_0=	'Start' 
    {
        newLeafNode(lv_fragments_11_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_11_0, "Start");
	    }

)
)(
(
		lv_fragments_12_0=	'of' 
    {
        newLeafNode(lv_fragments_12_0, grammarAccess.getSentenceAccess().getFragmentsOfKeyword_1_0_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_12_0, "of");
	    }

)
))
    |((
(
		lv_fragments_13_0=	'Start' 
    {
        newLeafNode(lv_fragments_13_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_6_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_13_0, "Start");
	    }

)
)(
(
		lv_fragments_14_0=	'Start' 
    {
        newLeafNode(lv_fragments_14_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_6_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_14_0, "Start");
	    }

)
))
    |((
(
		lv_fragments_15_0=	'Start' 
    {
        newLeafNode(lv_fragments_15_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_7_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_15_0, "Start");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getFragmentsREGULAR_FRAGMENTParserRuleCall_1_0_7_1_0()); 
	    }
		lv_fragments_16_0=ruleREGULAR_FRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"fragments",
        		lv_fragments_16_0, 
        		"REGULAR_FRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_fragments_17_0=	'knowledge' 
    {
        newLeafNode(lv_fragments_17_0, grammarAccess.getSentenceAccess().getFragmentsKnowledgeKeyword_1_0_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_17_0, "knowledge");
	    }

)
)
    |(
(
		lv_fragments_18_0=	'commonsense' 
    {
        newLeafNode(lv_fragments_18_0, grammarAccess.getSentenceAccess().getFragmentsCommonsenseKeyword_1_0_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_18_0, "commonsense");
	    }

)
)
    |((
(
		lv_fragments_19_0=	'Start' 
    {
        newLeafNode(lv_fragments_19_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_10_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_19_0, "Start");
	    }

)
)(
(
		lv_fragments_20_0=	'reflexive' 
    {
        newLeafNode(lv_fragments_20_0, grammarAccess.getSentenceAccess().getFragmentsReflexiveKeyword_1_0_10_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_20_0, "reflexive");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getFragmentsREGULAR_FRAGMENTParserRuleCall_1_0_10_2_0()); 
	    }
		lv_fragments_21_0=ruleREGULAR_FRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"fragments",
        		lv_fragments_21_0, 
        		"REGULAR_FRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_fragments_22_0=	'reflexive' 
    {
        newLeafNode(lv_fragments_22_0, grammarAccess.getSentenceAccess().getFragmentsReflexiveKeyword_1_0_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_22_0, "reflexive");
	    }

)
)
    |((
(
		lv_fragments_23_0=	'Start' 
    {
        newLeafNode(lv_fragments_23_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_12_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_23_0, "Start");
	    }

)
)(
(
		lv_fragments_24_0=	'description' 
    {
        newLeafNode(lv_fragments_24_0, grammarAccess.getSentenceAccess().getFragmentsDescriptionKeyword_1_0_12_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_24_0, "description");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getFragmentsREGULAR_FRAGMENTParserRuleCall_1_0_12_2_0()); 
	    }
		lv_fragments_25_0=ruleREGULAR_FRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"fragments",
        		lv_fragments_25_0, 
        		"REGULAR_FRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_fragments_26_0=	'description' 
    {
        newLeafNode(lv_fragments_26_0, grammarAccess.getSentenceAccess().getFragmentsDescriptionKeyword_1_0_13_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_26_0, "description");
	    }

)
)
    |(
(
		lv_fragments_27_0=	'of' 
    {
        newLeafNode(lv_fragments_27_0, grammarAccess.getSentenceAccess().getFragmentsOfKeyword_1_0_14_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_27_0, "of");
	    }

)
)
    |((
(
		lv_fragments_28_0=	'The' 
    {
        newLeafNode(lv_fragments_28_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_15_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_28_0, "The");
	    }

)
)(
(
		lv_fragments_29_0=	'commonsense' 
    {
        newLeafNode(lv_fragments_29_0, grammarAccess.getSentenceAccess().getFragmentsCommonsenseKeyword_1_0_15_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_29_0, "commonsense");
	    }

)
))
    |((
(
		lv_fragments_30_0=	'The' 
    {
        newLeafNode(lv_fragments_30_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_16_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_30_0, "The");
	    }

)
)(
(
		lv_fragments_31_0=	'knowledge' 
    {
        newLeafNode(lv_fragments_31_0, grammarAccess.getSentenceAccess().getFragmentsKnowledgeKeyword_1_0_16_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_31_0, "knowledge");
	    }

)
))
    |((
(
		lv_fragments_32_0=	'The' 
    {
        newLeafNode(lv_fragments_32_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_17_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_32_0, "The");
	    }

)
)(
(
		lv_fragments_33_0=	'reflexive' 
    {
        newLeafNode(lv_fragments_33_0, grammarAccess.getSentenceAccess().getFragmentsReflexiveKeyword_1_0_17_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_33_0, "reflexive");
	    }

)
))
    |((
(
		lv_fragments_34_0=	'The' 
    {
        newLeafNode(lv_fragments_34_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_18_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_34_0, "The");
	    }

)
)(
(
		lv_fragments_35_0=	'description' 
    {
        newLeafNode(lv_fragments_35_0, grammarAccess.getSentenceAccess().getFragmentsDescriptionKeyword_1_0_18_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_35_0, "description");
	    }

)
))
    |((
(
		lv_fragments_36_0=	'The' 
    {
        newLeafNode(lv_fragments_36_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_19_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_36_0, "The");
	    }

)
)(
(
		lv_fragments_37_0=	'of' 
    {
        newLeafNode(lv_fragments_37_0, grammarAccess.getSentenceAccess().getFragmentsOfKeyword_1_0_19_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_37_0, "of");
	    }

)
))
    |((
(
		lv_fragments_38_0=	'The' 
    {
        newLeafNode(lv_fragments_38_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_20_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_38_0, "The");
	    }

)
)(
(
		lv_fragments_39_0=	'story' 
    {
        newLeafNode(lv_fragments_39_0, grammarAccess.getSentenceAccess().getFragmentsStoryKeyword_1_0_20_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_39_0, "story");
	    }

)
))
    |((
(
		lv_fragments_40_0=	'The' 
    {
        newLeafNode(lv_fragments_40_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_21_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_40_0, "The");
	    }

)
)(
(
		lv_fragments_41_0=	'titled' 
    {
        newLeafNode(lv_fragments_41_0, grammarAccess.getSentenceAccess().getFragmentsTitledKeyword_1_0_21_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_41_0, "titled");
	    }

)
))
    |((
(
		lv_fragments_42_0=	'The' 
    {
        newLeafNode(lv_fragments_42_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_22_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_42_0, "The");
	    }

)
)(
(
		lv_fragments_43_0=	'Start' 
    {
        newLeafNode(lv_fragments_43_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_22_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_43_0, "Start");
	    }

)
))
    |((
(
		lv_fragments_44_0=	'The' 
    {
        newLeafNode(lv_fragments_44_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_23_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_44_0, "The");
	    }

)
)(
(
		lv_fragments_45_0=	'The' 
    {
        newLeafNode(lv_fragments_45_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_23_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_45_0, "The");
	    }

)
))
    |((
(
		lv_fragments_46_0=	'The' 
    {
        newLeafNode(lv_fragments_46_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_0_24_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_46_0, "The");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getFragmentsREGULAR_FRAGMENTParserRuleCall_1_0_24_1_0()); 
	    }
		lv_fragments_47_0=ruleREGULAR_FRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"fragments",
        		lv_fragments_47_0, 
        		"REGULAR_FRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_fragments_48_0=	'end' 
    {
        newLeafNode(lv_fragments_48_0, grammarAccess.getSentenceAccess().getFragmentsEndKeyword_1_0_25_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_48_0, "end");
	    }

)
)
    |((
(
		lv_fragments_49_0=	'Start' 
    {
        newLeafNode(lv_fragments_49_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_26_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_49_0, "Start");
	    }

)
)(
(
		lv_fragments_50_0=	'titled' 
    {
        newLeafNode(lv_fragments_50_0, grammarAccess.getSentenceAccess().getFragmentsTitledKeyword_1_0_26_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_50_0, "titled");
	    }

)
))
    |((
(
		lv_fragments_51_0=	'Start' 
    {
        newLeafNode(lv_fragments_51_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_0_27_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_51_0, "Start");
	    }

)
)(
(
		lv_fragments_52_0=	'story' 
    {
        newLeafNode(lv_fragments_52_0, grammarAccess.getSentenceAccess().getFragmentsStoryKeyword_1_0_27_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_52_0, "story");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSentenceAccess().getFragmentsREGULAR_FRAGMENTParserRuleCall_1_0_27_2_0()); 
	    }
		lv_fragments_53_0=ruleREGULAR_FRAGMENT		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSentenceRule());
	        }
       		add(
       			$current, 
       			"fragments",
        		lv_fragments_53_0, 
        		"REGULAR_FRAGMENT");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
(
		lv_fragments_54_0=	'story' 
    {
        newLeafNode(lv_fragments_54_0, grammarAccess.getSentenceAccess().getFragmentsStoryKeyword_1_0_28_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_54_0, "story");
	    }

)
)
    |(
(
		lv_fragments_55_0=	'titled' 
    {
        newLeafNode(lv_fragments_55_0, grammarAccess.getSentenceAccess().getFragmentsTitledKeyword_1_0_29_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_55_0, "titled");
	    }

)
))*((
(
		lv_fragments_56_0=	'Start' 
    {
        newLeafNode(lv_fragments_56_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_56_0, "Start");
	    }

)
)
    |(
(
		lv_fragments_57_0=	'The' 
    {
        newLeafNode(lv_fragments_57_0, grammarAccess.getSentenceAccess().getFragmentsTheKeyword_1_1_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_57_0, "The");
	    }

)
)
    |((
(
		lv_fragments_58_0=	'Start' 
    {
        newLeafNode(lv_fragments_58_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_1_2_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_58_0, "Start");
	    }

)
)(
(
		lv_fragments_59_0=	'commonsense' 
    {
        newLeafNode(lv_fragments_59_0, grammarAccess.getSentenceAccess().getFragmentsCommonsenseKeyword_1_1_2_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_59_0, "commonsense");
	    }

)
))
    |((
(
		lv_fragments_60_0=	'Start' 
    {
        newLeafNode(lv_fragments_60_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_1_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_60_0, "Start");
	    }

)
)(
(
		lv_fragments_61_0=	'reflexive' 
    {
        newLeafNode(lv_fragments_61_0, grammarAccess.getSentenceAccess().getFragmentsReflexiveKeyword_1_1_3_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_61_0, "reflexive");
	    }

)
))
    |((
(
		lv_fragments_62_0=	'Start' 
    {
        newLeafNode(lv_fragments_62_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_1_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_62_0, "Start");
	    }

)
)(
(
		lv_fragments_63_0=	'description' 
    {
        newLeafNode(lv_fragments_63_0, grammarAccess.getSentenceAccess().getFragmentsDescriptionKeyword_1_1_4_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_63_0, "description");
	    }

)
))
    |((
(
		lv_fragments_64_0=	'Start' 
    {
        newLeafNode(lv_fragments_64_0, grammarAccess.getSentenceAccess().getFragmentsStartKeyword_1_1_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_64_0, "Start");
	    }

)
)(
(
		lv_fragments_65_0=	'story' 
    {
        newLeafNode(lv_fragments_65_0, grammarAccess.getSentenceAccess().getFragmentsStoryKeyword_1_1_5_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSentenceRule());
	        }
       		addWithLastConsumed($current, "fragments", lv_fragments_65_0, "story");
	    }

)
)))?	otherlv_66='.' 
    {
    	newLeafNode(otherlv_66, grammarAccess.getSentenceAccess().getFullStopKeyword_1_2());
    }
))
;





// Entry rule entryRuleREGULAR_FRAGMENT
entryRuleREGULAR_FRAGMENT returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getREGULAR_FRAGMENTRule()); } 
	 iv_ruleREGULAR_FRAGMENT=ruleREGULAR_FRAGMENT 
	 { $current=$iv_ruleREGULAR_FRAGMENT.current.getText(); }  
	 EOF 
;

// Rule REGULAR_FRAGMENT
ruleREGULAR_FRAGMENT returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_QUOTED_TEXT_0=RULE_QUOTED_TEXT    {
		$current.merge(this_QUOTED_TEXT_0);
    }

    { 
    newLeafNode(this_QUOTED_TEXT_0, grammarAccess.getREGULAR_FRAGMENTAccess().getQUOTED_TEXTTerminalRuleCall_0()); 
    }

    |    this_WORD_1=RULE_WORD    {
		$current.merge(this_WORD_1);
    }

    { 
    newLeafNode(this_WORD_1, grammarAccess.getREGULAR_FRAGMENTAccess().getWORDTerminalRuleCall_1()); 
    }

    |
	kw=',' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getREGULAR_FRAGMENTAccess().getCommaKeyword_2()); 
    }

    |
	kw=';' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getREGULAR_FRAGMENTAccess().getSemicolonKeyword_3()); 
    }
)
    ;





RULE_QUOTED_TEXT : '"' ~('"')* '"';

RULE_WORD : ('0'..'9'|'a'..'z'|'A'..'Z'|'_'|'"'|'\'')+;

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


