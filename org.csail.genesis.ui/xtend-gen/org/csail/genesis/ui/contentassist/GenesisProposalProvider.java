/**
 * generated by Xtext
 */
package org.csail.genesis.ui.contentassist;

import org.csail.genesis.ui.contentassist.AbstractGenesisProposalProvider;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.jface.text.contentassist.ICompletionProposal;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * see http://www.eclipse.org/Xtext/documentation.html#contentAssist on how to customize content assistant
 */
@SuppressWarnings("all")
public class GenesisProposalProvider extends AbstractGenesisProposalProvider {
  public void complete_CommonsenseKnowledge(final EObject model, final RuleCall ruleCall, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    super.complete_CommonsenseKnowledge(model, ruleCall, context, acceptor);
    String proposal = "Start commonsense knowledge.\n";
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal(proposal, context);
    acceptor.accept(_createCompletionProposal);
  }
  
  public void complete_ReflexiveKnowledge(final EObject model, final RuleCall ruleCall, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    super.complete_ReflexiveKnowledge(model, ruleCall, context, acceptor);
    String proposal = "Start reflexive knowledge.\n";
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal(proposal, context);
    acceptor.accept(_createCompletionProposal);
  }
  
  public void complete_Perspective(final EObject model, final RuleCall ruleCall, final ContentAssistContext context, final ICompletionProposalAcceptor acceptor) {
    super.complete_Perspective(model, ruleCall, context, acceptor);
    String prefix = context.getPrefix();
    String proposal = (prefix + " perspective.\n");
    ICompletionProposal _createCompletionProposal = this.createCompletionProposal(proposal, context);
    acceptor.accept(_createCompletionProposal);
  }
  
  public void completeKeyword(final Keyword keyword, final ContentAssistContext contentAssistContext, final ICompletionProposalAcceptor acceptor) {
  }
}
